global:
  postgresql:
    auth: {}

environment: ~

schema:
  update:
    enabled: true
    backoffLimit: 100
    env: []
    image:
      repository: ~
      tag: ~
      pullPolicy: ~

syncWorker:
  enabled: true
  replicaCount: 2
  logLevel: "info"
  image:
    repository: ~
    tag: ~
    pullPolicy: ~
  metrics:
    annotations:
      enabled: false
  env: []
  podAnnotations: {}
  podLabels: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

salesforcePubSub:
  enabled: true
  replicaCount: 1
  logLevel: "info"
  image:
    repository: ~
    tag: ~
    pullPolicy: ~
  metrics:
    annotations:
      enabled: false
  env: []
  podAnnotations: {}
  podLabels: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

management:
  enabled: true
  replicaCount: 1
  frontendUrl: ""
  image:
    repository: ~
    tag: ~
    pullPolicy: ~
  service:
    type: ClusterIP
    port: 3000
    annotations: {} # Evaluated as template
  env: []
  podAnnotations: {}
  podLabels: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    enabled: true
    # className: nginx
    annotations:
      {}
      # assign to a static IP in GCP
      # kubernetes.io/ingress.global-static-ip-name: supaglue-ip
      # assign a Managed Certificate in GCP
      # networking.gke.io/managed-certificates: supaglue-cert
    tls: []
    #  - secretName: chart-example-tls
    hosts: []
    #   - "supaglue.domain.com"

api:
  enabled: true
  replicaCount: 2
  logLevel: "info"
  serverUrl: ""
  oauthReturnUrl: ""
  corsOrigin: ""
  image:
    repository: ~
    tag: ~
    pullPolicy: ~
  service:
    type: ClusterIP
    port: 8080
    annotations: {} # Evaluated as template
  metrics:
    annotations:
      enabled: false
  env: []
  podAnnotations: {}
  podLabels: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    enabled: true
    # className: nginx
    annotations:
      {}
      # assign to a static IP in GCP
      # kubernetes.io/ingress.global-static-ip-name: supaglue-ip
      # assign a Managed Certificate in GCP
      # networking.gke.io/managed-certificates: supaglue-cert
    tls: []
    #  - secretName: chart-example-tls
    hosts: []
    #   - "supaglue-api.domain.com"

managedCertificate:
  enabled: false
  name: supaglue-api-cert

# Custom Service account management
serviceAccount:
  # Whether to create service account or not
  create: false
  # Name of the service account, default: supaglue.fullname
  name:
  extraAnnotations:

existingSecret: ~

secretKeys:
  databaseUrl: database-url
  dbEncryptionSecret: db-encryption-secret
  apiKeySalt: api-key-salt
  jwtSecret: jwt-secret
  internalApiToken: internal-api-token
  adminPassword: admin-password
  apiDatabaseUrl: api-database-url
  syncWorkerDatabaseUrl: sync-worker-database-url
  salesforcePubSubDatabaseUrl: salesforce-pubsub-database-url
  svixApiToken: svix-api-token

apiKeySalt: ""
dbEncryptionSecret: ""
jwtSecret: ""
internalApiToken: ""
adminPassword: ""
svixApiToken: ""

deploymentId: ""

temporal:
  enabled: true
  host: ~
  port: ~
  grafana:
    enabled: false
  elasticsearch:
    enabled: false
  prometheus:
    enabled: false
  cassandra:
    persistence:
      enabled: true

postgresql:
  enabled: true
  host: ~
  port: ~
  auth:
    database: supaglue
    username: supaglue
  primary:
    resources:
      limits: {}
      requests:
        memory: 2Gi
        cpu: 1
    extendedConfiguration: |
      max_connections = 400
      idle_in_transaction_session_timeout = 600000
